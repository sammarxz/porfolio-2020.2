@mixin media($breakpoint) {
  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {
    // Get the breakpoint value.
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    // Write the media query.
    @media (min-width: $breakpoint-value) {
      @content;
    }

    // If the breakpoint doesn't exist in the map.
  } @else {
    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

@mixin spacing($list, $type) {
  @each $name, $val in $list {
    &--#{$name} {
      #{$type}: calc(#{$val} * 8px);
    }

    &t--#{$name} {
      #{$type}-top: calc(#{$val} * 8px);
    }

    &b--#{$name} {
      #{$type}-bottom: calc(#{$val} * 8px);
    }

    &tb--#{$name} {
      #{$type}-top: calc(#{$val} * 8px);
      #{$type}-bottom: calc(#{$val} * 8px);
    }

    &r--#{$name} {
      #{$type}-right: calc(#{$val} * 8px);
    }

    &l--#{$name} {
      #{$type}-left: calc(#{$val} * 8px);
    }

    &rl--#{$name} {
      #{$type}-right: calc(#{$val} * 8px);
      #{$type}-left: calc(#{$val} * 8px);
    }
  }
}

@mixin generateColors($colors, $type) {
  @each $colorName, $colorVal in $colors {
    @for $i from 1 through 5 {
      @if $colorName == "white" {
        &--#{$colorName}-#{$i * 10} {
          #{$type}: darken($colorVal, $i * 10%);
        }
      } @else {
        &--#{$colorName}-#{$i * 10} {
          #{$type}: lighten($colorVal, $i * 10%);
        }
      }
    }
  }
}
